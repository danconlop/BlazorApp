@inject IJSRuntime js
@using Model.Entities

<input type="checkbox" @bind="_show" />
<div style="display: flex; flex-wrap: wrap; align-items: center;">
    <GenericListComponent GenericList="Movies">
        <ListAny Context="movie">
            <MovieSingleComponent Movie="movie" ShowButton="_show" DeleteMovie="DeleteMovie" />
        </ListAny>
    </GenericListComponent>
</div>


@code {
    // Parametros deben ser:
    // publicos y tener setter getter
    [Parameter]
    public List<Movie> Movies { get; set; }
    private bool _show = false;

    // Sicnrono si queremos hacer cambios en el valor de uno de los campos (campos internos)
    // Asincrono si se va a traer info de la db (que no sabemos cuanto va a tardar)
    //sino puede dar error pues el parametro va vacio

    //protected override void OnInitialized()
    //{
    //    Console.WriteLine($"OnInicialized - Movies count = {Movies.Count}");
    //}

    //protected override void OnParametersSet()
    //{
    //    Console.WriteLine($"OnParametersSet - Movies count = {Movies.Count}");
    //}
    //protected override void OnAfterRender(bool firstRender)
    //{
    //    Console.WriteLine($"OnAfterRender - FirstRender = {firstRender}");
    //}
    //protected override bool ShouldRender()
    //{
    //    Console.WriteLine("Should Render");
    //    return true;
    //}


    private async Task DeleteMovie(Movie movie)
    {
        bool confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to remove the movie {movie.Title}");

        if (confirm)
        {
            Movies.Remove(movie);
            //Console.WriteLine($"Deleting movie {movie.Title}");
            await js.InvokeVoidAsync("console.log", $"Deleting movie {movie.Title}");
        }
    }
}
